观察者模式：其实就是发布订阅模式：发布者发布信息，订阅者就可以接收到信息，只有订阅了的人才可以接收到信息

包括四个角色：
- 抽象的被观察者：  把所有对观察者对象的引用保存在一个集合中，每个主题都可以有任意数量的观察者。
                    抽象主题提供一个接口，可以增加和删除观察者角色。一般用一个抽象类和接口来实现
- 抽象的观察者：    为所有的具体观察者定义一个接口，在得到主题通知时更新自己
- 具体的被观察者
- 具体的观察者

典型应用：事件驱动模型
    一般地会用一个线程来作为reactor监听事件的发生，
    会有一个事件队列，如果有事件产生将会将入到此队列当中，而reactor线程就是在监听这个队列是否为空，这样做是为了保持reactor一直在运行
    发生事件了会启动一个线程或者从线程池中获取一个线程进行处理，调用监听者的执行接口进行回调（强烈建议用接口实现回调）
    当然不仅仅有这么一种模式，还有其他的实现

    可以参考：https://www.cnblogs.com/harvyxu/p/7498763.html